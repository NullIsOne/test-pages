{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"modules":[{"projects":[{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Facade","sections":[{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade"}]},{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak","sections":[{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9"},{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9","kind":"task"},{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject"},{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#Check-Your-Understanding","kind":"assessment"}]},{"sections":[{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0","kind":"task"}],"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Signals"}],"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/-----------------------View"},{"projects":[{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding","sections":[{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State","kind":"task"},{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding","kind":"task"},{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding#Check-Your-Understanding","kind":"assessment"}]},{"sections":[{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState","kind":"task"},{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder","kind":"task"}],"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/ViewState-+-ViewStateHolder"}],"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/---------------------State"},{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/---------","projects":[{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/NavigationState","sections":[{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState","kind":"task"}]}]}],"paths":[["doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents","doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/$volume","doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/-----------------------View"]],"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents"},"identifier":{"url":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak","interfaceLanguage":"swift"},"sections":[{"title":"Применение Environment","chapter":"Связь между модулями и View","content":[{"inlineContent":[{"type":"text","text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment."}],"type":"paragraph"}],"estimatedTimeInMinutes":15,"kind":"hero"},{"kind":"tasks","tasks":[{"anchor":"Передача-значений","title":"Передача значений","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"С помощью Environment можно передавать постоянные значения, такие как ","type":"text"},{"code":"placeholder","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"hint"},{"type":"text","text":" и т.д."}]},{"inlineContent":[{"text":"Не стоит пытаться передавать так динамические объекты или state. Обновление значений в environment не отразится на ","type":"text"},{"type":"codeVoice","code":"View"},{"type":"text","text":"."}],"type":"paragraph"}]}],"stepsSection":[{"media":null,"runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Определим "},{"code":"EnvironmentKey","type":"codeVoice"}],"type":"paragraph"}],"type":"step","code":"Environment-01-01.swift"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Зарегистрируем значением в ","type":"text"},{"type":"codeVoice","code":"EnvironmentValues"},{"type":"text","text":" и определим значение по умолчанию"}]}],"media":null,"caption":[],"type":"step","code":"Environment-01-02.swift","runtimePreview":null},{"type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"Добавим короткий способ для установки значений в environment"}],"type":"paragraph"}],"runtimePreview":null,"caption":[],"code":"Environment-01-03.swift"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Проверим на простеньком View с полем ввода","type":"text"}]}],"type":"step","caption":[],"runtimePreview":"preview-Environment-01-04.png","code":"Environment-01-04.swift","media":null},{"caption":[],"type":"step","content":[{"inlineContent":[{"text":"Добавим установку значения плейсхолдера из ","type":"text"},{"type":"codeVoice","code":"Environment"}],"type":"paragraph"}],"media":null,"code":"Environment-01-05.swift","runtimePreview":"preview-Environment-01-05.png"},{"runtimePreview":"preview-Environment-01-06.png","content":[{"inlineContent":[{"text":"Установим один плейсхолдер на несколько полей","type":"text"}],"type":"paragraph"}],"caption":[],"code":"Environment-01-06.swift","type":"step","media":null},{"runtimePreview":"preview-Environment-01-07.png","code":"Environment-01-07.swift","caption":[],"type":"step","content":[{"inlineContent":[{"text":"Или индивидуальные плейсхолдеры","type":"text"}],"type":"paragraph"}],"media":null}]},{"anchor":"Передача-стилей","title":"Передача стилей","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"text":"В предыдущей секции мы показали как передавать элементарные значения, но можно ли передавать что-то более сложное?","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Конечно"}],"type":"strong"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"Можно передавать любой объект, которому мы можем определить значение по умолчанию."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Сам объект не должен зависеть от State, однако он может иметь функции, которые меняют возвращаемое значение на основе составляющих State."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Подробнее в этой секции."}],"type":"paragraph"}]}],"stepsSection":[{"media":null,"runtimePreview":null,"content":[{"inlineContent":[{"text":"Допустим, мы хотим стилизовать кастомный TabBar.","type":"text"},{"type":"text","text":" "},{"text":"Определяем протокол стиля с двумя ","type":"text"},{"type":"codeVoice","code":"@ViewBuilder"},{"type":"text","text":" функциями."}],"type":"paragraph"}],"caption":[{"inlineContent":[{"code":"makeItem","type":"codeVoice"},{"type":"text","text":" для модификации View элемента."},{"text":" ","type":"text"},{"type":"codeVoice","code":"makeContainer"},{"text":" для модификации View контейнера","type":"text"}],"type":"paragraph"}],"code":"Environment-02-01.swift","type":"step"},{"caption":[{"inlineContent":[{"type":"text","text":"Ссылаемся на "},{"code":"any TabBarViewStyle","type":"codeVoice"},{"text":", так как мы пока не знаем, какой именно стиль будет установлен.","type":"text"}],"type":"paragraph"}],"code":"Environment-02-02.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Заполним ","type":"text"},{"code":"EnvironmentKey","type":"codeVoice"},{"text":" и ","type":"text"},{"code":"EnvironmentValues","type":"codeVoice"},{"type":"text","text":" как в предыдущей секции."}]}],"type":"step","media":null,"runtimePreview":null},{"type":"step","media":null,"code":"Environment-02-03.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Не будем сильно углубляться в верстку ","type":"text"},{"code":"TabBarView","type":"codeVoice"},{"text":", но отметим, что для раскрытия стиля приходится оборачивать результат ","type":"text"},{"type":"codeVoice","code":"makeItem"},{"type":"text","text":" и "},{"code":"makeContainer","type":"codeVoice"},{"type":"text","text":" в "},{"type":"codeVoice","code":"AnyView"},{"type":"text","text":" для совместимости различных стилей."}]}],"runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"В SwiftUI любой модификатор над View возвращает измененное View, поэтому без этой трансформации абстрактный стиль не применить. Без "},{"type":"codeVoice","code":"AnyView"},{"text":" просто не скомпилится.","type":"text"}]}]},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"В итоге получаем классический tabBar"}]}],"runtimePreview":"preview-Environment-02-04.png","code":"Environment-02-04.swift","caption":[],"media":null},{"runtimePreview":"preview-Environment-02-05.png","type":"step","caption":[{"inlineContent":[{"text":"Полный вариант реализации вы можете посмотреть в Library модуле.","type":"text"}],"type":"paragraph"}],"media":null,"content":[{"inlineContent":[{"type":"text","text":"И современный вариант."}],"type":"paragraph"}],"code":"Environment-02-05.swift"}]},{"title":"Weak - Наша альтернатива EnvironmentObject","stepsSection":[{"code":"Environment-03-01.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Представим экран Onboarding.","type":"text"},{"type":"text","text":" "},{"text":"Существует некоторое хранилище статуса просмотра онбоардинга, которое View получает через ","type":"text"},{"code":"@EnvironmentObject","type":"codeVoice"},{"text":".`","type":"text"}]}],"caption":[],"media":null,"runtimePreview":null},{"code":"Environment-03-02.swift","caption":[{"type":"paragraph","inlineContent":[{"text":"Проблема в том, что регистрация происходит по классу реализации.","type":"text"}]}],"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Где-то в App это хранилище создается фабрикой, хранится и регистрируется в Environment."}],"type":"paragraph"}],"media":null,"type":"step"},{"media":null,"caption":[{"inlineContent":[{"type":"text","text":"А что если мы всё-таки хотим разделить ответственность между разными View?"},{"type":"text","text":" "},{"type":"text","text":"Например, в App хотим проверять статус, а в "},{"type":"codeVoice","code":"OnboardingView"},{"text":" использовать протокол ","type":"text"},{"type":"codeVoice","code":"OnboardingFlowSignal"},{"text":" для оповещения о завершении прохода Onboarding-а.","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"type":"step","code":"Environment-03-03.swift","content":[{"inlineContent":[{"type":"text","text":"Таким образом, даже когда мы разделяем хранилище на несколько протоколов, мы все равно должны регистрировать его по конкретному классу. И никак иначе."}],"type":"paragraph"}]},{"media":null,"caption":[{"inlineContent":[{"type":"text","text":"Он позволяет нам получить слабую ссылку на объект, внутри любой View."}],"type":"paragraph"}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Для этих целей мы написали propertyWrapper "},{"type":"codeVoice","code":"@Weak"},{"type":"text","text":"."}]}],"type":"step","code":"Environment-03-04.swift","runtimePreview":null},{"type":"step","runtimePreview":null,"media":null,"caption":[{"type":"paragraph","inlineContent":[{"text":"Синтаксис схож с тем, что мы использовали для ","type":"text"},{"code":"@EnvironmentObject","type":"codeVoice"},{"text":".","type":"text"}]}],"code":"Environment-03-05.swift","content":[{"type":"paragraph","inlineContent":[{"text":"А регистрация объекта производится по требуемому протоколу.","type":"text"}]}]}],"anchor":"Weak-Наша-альтернатива-EnvironmentObject","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"code":"EnvironmentObject","type":"codeVoice"},{"text":", также как и ","type":"text"},{"code":"EnvironmentValues","type":"codeVoice"},{"text":", распространяется между View через ViewTree.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Он позволяет делиться объектами "},{"code":"ObservableObject","type":"codeVoice"},{"type":"text","text":" между несколькими View."},{"text":" ","type":"text"},{"type":"text","text":"Этот объект может содержать "},{"type":"codeVoice","code":"Published"},{"type":"text","text":" свойства, из которых могут формироваться State конкретных View, а также принимать сигналы для изменения состояния."}]},{"inlineContent":[{"text":"В: Почему мы не используем ","type":"text"},{"type":"codeVoice","code":"EnvironmentObject"},{"text":"?","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"О: Не хотим зависеть от конкретного объекта","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Завязка на объекте может привести к проблемам при тестировании, а также к проблемам при изменении объекта."},{"type":"text","text":" "},{"text":"Подробнее о причинах и об альтернативном решении мы расскажем в секции.","type":"text"}]}]}]}]},{"kind":"assessments","assessments":[{"content":[],"choices":[{"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Это основное назначение Environment"}]}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Константы, Стили"}]}],"isCorrect":true},{"isCorrect":false,"content":[{"inlineContent":[{"type":"text","text":"State, Binding"}],"type":"paragraph"}],"justification":[{"type":"paragraph","inlineContent":[{"text":"Так не будет работать.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Перечитай первый раздел, чтобы освежить память."}]}]},{"isCorrect":false,"justification":[{"inlineContent":[{"text":"Передать его можно, но","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Какое у него будет значение по умолчанию?"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"В какой момент мы подпишемся на этот Publisher?"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Какое значение получим при подписке?","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Слишком много вопросов, и так мало ответов.","type":"text"}],"type":"paragraph"}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"AnyPublisher"}]}]},{"isCorrect":false,"content":[{"inlineContent":[{"type":"text","text":"Объекты ObservableObject"}],"type":"paragraph"}],"justification":[{"inlineContent":[{"type":"text","text":"Для передачи этих объектов существует "},{"code":"EnvironmentObject","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Он тоже использует Environment, но вместо пары Key\/Value регистрирует объекты по классу."}],"type":"paragraph"}]}],"type":"multiple-choice","title":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Какие значения можно передавать через EnvironmentValues?"}]}]}],"anchor":"Check-Your-Understanding"},{"abstract":[{"type":"text","text":"Сущность "},{"type":"codeVoice","code":"Signal"},{"type":"text","text":" это протокол, используемый для оповещения модулей верхнего уровня о "},{"type":"strong","inlineContent":[{"type":"text","text":"событиях"}]},{"type":"text","text":", происходящих в других модулях."}],"action":{"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Signals","isActive":true,"type":"reference","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Оповещение других модулей"}],"variants":[{"paths":["\/tutorials\/example\/environment+weak"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"project","metadata":{"categoryPathComponent":"Table-of-contents","category":"Оглавление","role":"project","title":"Применение Environment"},"references":{"preview-Environment-02-05.png":{"variants":[{"url":"\/images\/dev.surf.sui-core.Example\/preview-Environment-02-05.png","traits":["1x","light"]}],"identifier":"preview-Environment-02-05.png","alt":"Парящий tabBar","type":"image"},"doc://dev.surf.sui-core.Example/tutorials/Table-of-contents/---------------------State":{"url":"\/tutorials\/table-of-contents\/---------------------state","abstract":[],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/---------------------State","role":"article","title":"Внутренний и внешний State","type":"topic","kind":"article"},"doc://dev.surf.sui-core.Example/tutorials/Example/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9":{"kind":"section","title":"Передача значений","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9","url":"\/tutorials\/example\/environment+weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9","role":"pseudoSymbol","abstract":[{"type":"text","text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment."}],"type":"section"},"doc://dev.surf.sui-core.Example/tutorials/Example/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding":{"kind":"section","type":"section","abstract":[{"type":"text","text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это "},{"code":"@State","type":"codeVoice"},{"type":"text","text":" и "},{"code":"@Binding","type":"codeVoice"},{"type":"text","text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия."}],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding","role":"pseudoSymbol","url":"\/tutorials\/example\/state-vs-binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding","title":"Применение и возможности Binding"},"doc://dev.surf.sui-core.Example/tutorials/Example/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State":{"url":"\/tutorials\/example\/state-vs-binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State","abstract":[{"type":"text","text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это "},{"code":"@State","type":"codeVoice"},{"type":"text","text":" и "},{"code":"@Binding","type":"codeVoice"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State","role":"pseudoSymbol","title":"Применение и возможности State","type":"section","kind":"section"},"Environment-02-03.swift":{"highlights":[],"fileName":"TabBarView.swift","fileType":"swift","identifier":"Environment-02-03.swift","content":["import Resources","import SwiftUI","","public struct TabBarView<Item: Hashable & LabelRepresentable>: View {","","    \/\/ MARK: - Properties","","    @Environment(\\.tabBarViewStyle)","    private var style","","    let items: [Item]","","    @Binding var selectedItem: Item","","    \/\/ MARK: - Init","","    public init(items: [Item], selectedItem: Binding<Item>) {","        self.items = items","        self._selectedItem = selectedItem","    }","","    \/\/ MARK: - Body","","    public var body: some View {","        AnyView(style.makeContainer(AnyView(","            HStack {","                ForEach(items, id: \\.self) { item in","                    let isSelected = selectedItem.hashValue == item.hashValue","                    Button {","                        selectedItem = item","                    } label: {","                        AnyView(style.makeItem(","                            Label(","                                title: {","                                    Text(item.title)","                                },","                                icon: {","                                    Image(asset: item.image).renderingMode(.template)","                                }","                            ),","                            isActive: isSelected)","                        )","                    }.accessibilityAddTraits(isSelected ? [.isSelected, .isButton] : .isButton)","                }","            }","        ))","        )","    }","","}"],"syntax":"swift","type":"file"},"Environment-02-02.swift":{"fileName":"TabBarViewStyle.swift","content":["import SwiftUI","","public protocol TabBarViewStyle {","","    associatedtype ContainerView: View","    associatedtype ItemView: View","","    @ViewBuilder","    func makeItem(_ item: TabItemView, isActive: Bool) -> ItemView","","    @ViewBuilder","    func makeContainer(_ container: AnyView) -> ContainerView","","}","","public enum TabBarViewStyleKey: EnvironmentKey {","    public static var defaultValue: any TabBarViewStyle = .classic","}","","public extension EnvironmentValues {","    var tabBarViewStyle: any TabBarViewStyle {","        get { self[TabBarViewStyleKey.self] }","        set { self[TabBarViewStyleKey.self] = newValue }","    }","}"],"fileType":"swift","syntax":"swift","type":"file","highlights":[{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25}],"identifier":"Environment-02-02.swift"},"Environment-01-06.swift":{"fileType":"swift","highlights":[],"identifier":"Environment-01-06.swift","fileName":"FormView.swift","syntax":"swift","type":"file","content":["import Foundation","import SwiftUI","","struct FormView: View {","","    var body: some View {","        VStack {","            TutorView()","            TutorView()","            TutorView()","        }.placeholderValue(\"Введите текст\")","    }","","}"]},"Environment-03-04.swift":{"fileName":"OnboardingView.swift","identifier":"Environment-03-04.swift","type":"file","syntax":"swift","fileType":"swift","highlights":[{"line":2},{"line":6},{"line":13}],"content":["import SwiftUI","import SurfCore","","struct OnboardingView: View {","","    @WeakReference private var onboardingSignal: OnboardingFlowSignal?","","    var body: some View {","        VStack {","            Text(\"Последний экран онбоардинга\")","","            Button {","                onboardingSignal?.onboardingCompleted()","            } label: {","                Text(\"Готово\")","            }","        }","    }","}"]},"preview-Environment-01-07.png":{"type":"image","identifier":"preview-Environment-01-07.png","alt":"Тестовая форма","variants":[{"traits":["1x","light"],"url":"\/images\/dev.surf.sui-core.Example\/preview-Environment-01-07.png"}]},"Environment-03-02.swift":{"fileName":"TutorApp.swift","identifier":"Environment-03-02.swift","type":"file","syntax":"swift","fileType":"swift","highlights":[],"content":["import SwiftUI","","@main","struct TutorApp: App {","","    private let onboardingStatusStorage: OnboardingStatusStorage","","    init() {","        self.onboardingStatusStorage = OnboardingStatusStorageFactory.produce()","    }","","    var body: some Scene {","        WindowGroup {","            Group {","                if onboardingStatusStorage.isOnboardingCompleted {","                    MainView()","                } else {","                    OnboardingView()","                }","            }","            .environmentObject(onboardingStatusStorage)","        }","    }","}"]},"preview-Environment-01-05.png":{"type":"image","identifier":"preview-Environment-01-05.png","alt":"Тестовое поле ввода","variants":[{"url":"\/images\/dev.surf.sui-core.Example\/preview-Environment-01-05.png","traits":["1x","light"]}]},"doc://dev.surf.sui-core.Example/tutorials/Example/State-vs-Binding#Check-Your-Understanding":{"type":"link","title":"Check Your Understanding","titleInlineContent":[{"text":"Check Your Understanding","type":"text"}],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding#Check-Your-Understanding","url":"\/tutorials\/example\/state-vs-binding#Check-Your-Understanding"},"doc://dev.surf.sui-core.Example/tutorials/Example/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade":{"kind":"section","title":"Пример формирования Facade","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade","url":"\/tutorials\/example\/facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade","role":"pseudoSymbol","abstract":[{"type":"text","text":"Иными словами это Input и Output модуля."}],"type":"section"},"doc://dev.surf.sui-core.Example/tutorials/Table-of-contents/-----------------------View":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/-----------------------View","role":"article","url":"\/tutorials\/table-of-contents\/-----------------------view","title":"Связь между модулями и View"},"doc://dev.surf.sui-core.Example/tutorials/Example/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment."}],"kind":"section","title":"Передача стилей","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9","type":"section","url":"\/tutorials\/example\/environment+weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9"},"doc://dev.surf.sui-core.Example/tutorials/Example/Signals":{"type":"topic","role":"project","title":"Оповещение других модулей","url":"\/tutorials\/example\/signals","kind":"project","estimatedTime":"10min","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Signals","abstract":[{"type":"text","text":"Сущность "},{"code":"Signal","type":"codeVoice"},{"text":" это протокол, используемый для оповещения модулей верхнего уровня о ","type":"text"},{"type":"strong","inlineContent":[{"text":"событиях","type":"text"}]},{"text":", происходящих в других модулях.","type":"text"}]},"Environment-01-01.swift":{"type":"file","syntax":"swift","highlights":[],"fileName":"PlaceholderValue.swift","fileType":"swift","identifier":"Environment-01-01.swift","content":["import Foundation","import SwiftUI","","public enum PlaceholderValueKey: EnvironmentKey {","    public static var defaultValue: String = \"\"","}"]},"doc://dev.surf.sui-core.Example/tutorials/Example/Facade":{"title":"Facade как лицо модуля","url":"\/tutorials\/example\/facade","role":"project","estimatedTime":"5min","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Facade","kind":"project","type":"topic","abstract":[{"type":"text","text":"Иными словами это Input и Output модуля."}]},"preview-Environment-01-06.png":{"type":"image","identifier":"preview-Environment-01-06.png","alt":"Тестовая форма","variants":[{"url":"\/images\/dev.surf.sui-core.Example\/preview-Environment-01-06.png","traits":["1x","light"]}]},"preview-Environment-02-04.png":{"type":"image","identifier":"preview-Environment-02-04.png","alt":"Классический tabBar","variants":[{"traits":["1x","light"],"url":"\/images\/dev.surf.sui-core.Example\/preview-Environment-02-04.png"}]},"Environment-02-05.swift":{"syntax":"swift","identifier":"Environment-02-05.swift","fileType":"swift","highlights":[{"line":8},{"line":9}],"fileName":"TutorView.swift","type":"file","content":["import Foundation","import SwiftUI","","struct TutorView: View {","","    var body: some View {","        TabBarView(items: StubItem.allCases,","                   selectedItem: .constant(StubItem.main))","        .tabBarViewStyle(.rounded)","    }","","}"]},"Environment-03-05.swift":{"fileName":"TutorApp.swift","content":["import SwiftUI","","@main","struct TutorApp: App {","","    private let onboardingStatusStorage: OnboardingStatusStorage","","    init() {","        self.onboardingStatusStorage = OnboardingStatusStorageFactory.produce()","    }","","    var body: some Scene {","        WindowGroup {","            Group {","                if onboardingStatusStorage.isOnboardingCompleted {","                    MainView()","                } else {","                    OnboardingView()","                }","            }","            .weakReference(onboardingStatusStorage, as: OnboardingFlowSignal.self)","        }","    }","}"],"fileType":"swift","syntax":"swift","type":"file","highlights":[{"line":21}],"identifier":"Environment-03-05.swift"},"Environment-01-05.swift":{"syntax":"swift","identifier":"Environment-01-05.swift","fileType":"swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":13}],"fileName":"TutorView.swift","type":"file","content":["import Foundation","import SwiftUI","","struct TutorView: View {","","    @Environment(\\.placeholderValue)","    var placeholderValue","","    @State var text: String = \"\"","","    var body: some View {","        TextField(text: $text, label: {","            Text(placeholderValue)","        })","    }","","}"]},"doc://dev.surf.sui-core.Example/tutorials/Example/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder":{"url":"\/tutorials\/example\/viewstate-+-viewstateholder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder","abstract":[{"text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры.","type":"text"},{"text":" ","type":"text"},{"text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д.","type":"text"}],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder","role":"pseudoSymbol","title":"Примеры обмена данными между View и State через ViewStateHolder","type":"section","kind":"section"},"Environment-03-01.swift":{"fileName":"OnboardingView.swift","content":["import SwiftUI","","struct OnboardingView: View {","","    @EnvironmentObject private var onboardingStatusStorage: OnboardingStatusStorage","","    var body: some View {","        VStack {","            Text(\"Последний экран онбоардинга\")","","            Button {","                onboardingStatusStorage.isOnboardingCompleted = true","            } label: {","                Text(\"Готово\")","            }","        }","    }","}"],"fileType":"swift","syntax":"swift","type":"file","highlights":[],"identifier":"Environment-03-01.swift"},"doc://dev.surf.sui-core.Example/tutorials/Example/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState":{"url":"\/tutorials\/example\/navigationstate#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState","abstract":[{"type":"text","text":"Начиная с iOS 16, в SwiftUI доступен "},{"code":"NavigationStack","type":"codeVoice"},{"text":", который позволяет управлять навигацией в приложении.","type":"text"}],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState","role":"pseudoSymbol","title":"Пример использования NavigationState","type":"section","kind":"section"},"Environment-02-01.swift":{"fileName":"TabBarViewStyle.swift","identifier":"Environment-02-01.swift","type":"file","syntax":"swift","fileType":"swift","highlights":[],"content":["import SwiftUI","","public protocol TabBarViewStyle {","","    associatedtype ContainerView: View","    associatedtype ItemView: View","","    @ViewBuilder","    func makeItem(_ item: TabItemView, isActive: Bool) -> ItemView","","    @ViewBuilder","    func makeContainer(_ container: AnyView) -> ContainerView","","}"]},"doc://dev.surf.sui-core.Example/tutorials/Example/ViewState-+-ViewStateHolder":{"kind":"project","title":"ViewState, UniversalState и ViewStateHolder","estimatedTime":"20min","type":"topic","role":"project","abstract":[{"text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д."}],"url":"\/tutorials\/example\/viewstate-+-viewstateholder","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/ViewState-+-ViewStateHolder"},"doc://dev.surf.sui-core.Example/tutorials/Example/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState":{"abstract":[{"type":"text","text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры."},{"text":" ","type":"text"},{"type":"text","text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д."}],"url":"\/tutorials\/example\/viewstate-+-viewstateholder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState","title":"Примеры организации ViewState","kind":"section","role":"pseudoSymbol","type":"section"},"Environment-02-04.swift":{"type":"file","syntax":"swift","highlights":[],"fileName":"TutorView.swift","fileType":"swift","identifier":"Environment-02-04.swift","content":["import Foundation","import SwiftUI","","struct TutorView: View {","","    var body: some View {","        TabBarView(items: StubItem.allCases,","                   selectedItem: .constant(StubItem.profile))","        .tabBarViewStyle(.classic)","    }","","}"]},"doc://dev.surf.sui-core.Example/tutorials/Example/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject":{"kind":"section","title":"Weak - Наша альтернатива EnvironmentObject","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject","url":"\/tutorials\/example\/environment+weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject","role":"pseudoSymbol","abstract":[{"text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment.","type":"text"}],"type":"section"},"Environment-01-03.swift":{"fileName":"PlaceholderValue.swift","identifier":"Environment-01-03.swift","type":"file","syntax":"swift","fileType":"swift","highlights":[{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19}],"content":["import Foundation","import SwiftUI","","public enum PlaceholderValueKey: EnvironmentKey {","    public static var defaultValue: String = \"\"","}","","public extension EnvironmentValues {","    var placeholderValue: String {","        get { self[PlaceholderValueKey.self] }","        set { self[PlaceholderValueKey.self] = newValue }","    }","}","","public extension View {","    func placeholderValue(_ placeholderValue: String) -> some View {","        self.environment(\\.placeholderValue, placeholderValue)","    }","}"]},"Environment-01-07.swift":{"highlights":[{"line":9},{"line":11},{"line":13},{"line":14}],"identifier":"Environment-01-07.swift","fileName":"FormView.swift","type":"file","fileType":"swift","syntax":"swift","content":["import Foundation","import SwiftUI","","struct FormView: View {","","    var body: some View {","        VStack {","            TutorView()","                .placeholderValue(\"Фамилия\")","            TutorView()","                .placeholderValue(\"Имя\")","            TutorView()","                .placeholderValue(\"Отчество\")","        }","    }","","}"]},"doc://dev.surf.sui-core.Example/tutorials/Table-of-contents/---------":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/---------","role":"article","url":"\/tutorials\/table-of-contents\/---------","title":"Навигация"},"doc://dev.surf.sui-core.Example/tutorials/Example/Environment+Weak#Check-Your-Understanding":{"title":"Check Your Understanding","type":"link","titleInlineContent":[{"type":"text","text":"Check Your Understanding"}],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#Check-Your-Understanding","url":"\/tutorials\/example\/environment+weak#Check-Your-Understanding"},"doc://dev.surf.sui-core.Example/tutorials/Table-of-contents":{"kind":"overview","title":"Обучающие материалы по VSURF","type":"topic","role":"overview","abstract":[],"url":"\/tutorials\/table-of-contents","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents"},"Environment-03-03.swift":{"type":"file","syntax":"swift","highlights":[],"fileName":"TabBarView.swift","fileType":"swift","identifier":"Environment-03-03.swift","content":["@objc","public protocol OnboardingFlowSignal {","    func onboardingCompleted()","}","","public protocol OnboardingCompletionProvider: AnyObject {","","    var isOnboardingCompleted: Bool { get }","","}"]},"Environment-01-02.swift":{"syntax":"swift","fileName":"PlaceholderValue.swift","fileType":"swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13}],"identifier":"Environment-01-02.swift","content":["import Foundation","import SwiftUI","","public enum PlaceholderValueKey: EnvironmentKey {","    public static var defaultValue: String = \"\"","}","","public extension EnvironmentValues {","    var placeholderValue: String {","        get { self[PlaceholderValueKey.self] }","        set { self[PlaceholderValueKey.self] = newValue }","    }","}"],"type":"file"},"doc://dev.surf.sui-core.Example/tutorials/Example/State-vs-Binding":{"title":"State vs Binding","url":"\/tutorials\/example\/state-vs-binding","role":"project","estimatedTime":"10min","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding","kind":"project","type":"topic","abstract":[{"text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это ","type":"text"},{"type":"codeVoice","code":"@State"},{"type":"text","text":" и "},{"type":"codeVoice","code":"@Binding"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}]},"Environment-01-04.swift":{"identifier":"Environment-01-04.swift","highlights":[],"content":["import Foundation","import SwiftUI","","struct TutorView: View {","","    @State var text: String = \"\"","","    var body: some View {","        TextField(text: $text, label: {","            Text(\"\")","        })","    }","","}"],"fileType":"swift","fileName":"TutorView.swift","type":"file","syntax":"swift"},"doc://dev.surf.sui-core.Example/tutorials/Example/NavigationState":{"kind":"project","title":"Горизонтальный стек - push\/pop","estimatedTime":"10min","type":"topic","role":"project","abstract":[{"type":"text","text":"Начиная с iOS 16, в SwiftUI доступен "},{"type":"codeVoice","code":"NavigationStack"},{"text":", который позволяет управлять навигацией в приложении.","type":"text"}],"url":"\/tutorials\/example\/navigationstate","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/NavigationState"},"preview-Environment-01-04.png":{"type":"image","variants":[{"url":"\/images\/dev.surf.sui-core.Example\/preview-Environment-01-04.png","traits":["1x","light"]}],"alt":"Тестовое поле ввода","identifier":"preview-Environment-01-04.png"},"doc://dev.surf.sui-core.Example/tutorials/Example/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0":{"url":"\/tutorials\/example\/signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0","abstract":[{"text":"Сущность ","type":"text"},{"code":"Signal","type":"codeVoice"},{"text":" это протокол, используемый для оповещения модулей верхнего уровня о ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"событиях"}]},{"text":", происходящих в других модулях.","type":"text"}],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0","role":"pseudoSymbol","title":"Пример отправки и обработки сигнала","type":"section","kind":"section"},"doc://dev.surf.sui-core.Example/tutorials/Example/Environment+Weak":{"title":"Применение Environment","url":"\/tutorials\/example\/environment+weak","role":"project","estimatedTime":"15min","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak","kind":"project","type":"topic","abstract":[{"text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment.","type":"text"}]}}}