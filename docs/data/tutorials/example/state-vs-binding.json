{"sections":[{"estimatedTimeInMinutes":10,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это "},{"code":"@State","type":"codeVoice"},{"text":" и ","type":"text"},{"type":"codeVoice","code":"@Binding"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}]},{"inlineContent":[{"type":"text","text":"В каких случаях применять State, а в каких Binding разберем на примерах в этом уроке."}],"type":"paragraph"}],"kind":"hero","title":"State vs Binding","chapter":"Внутренний и внешний State"},{"kind":"tasks","tasks":[{"stepsSection":[{"media":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"$text"},{"text":" “превращает” наш локальный State в ","type":"text"},{"type":"codeVoice","code":"Binding<String>"},{"type":"text","text":", так как State представляет собой propertyWrapper, projectedValue которого и есть Binding."}]}],"code":"StateOrBinding-01-01.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Рассмотрим простейшее поле ввода.","type":"text"}]}],"type":"step"},{"type":"step","runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Это все возможности регулировки State извне."}]}],"code":"StateOrBinding-01-02.swift","media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Добавим установку начального значения через init.","type":"text"}]}]},{"code":"StateOrBinding-01-03.swift","caption":[{"inlineContent":[{"type":"text","text":"Результат будет тем же."}],"type":"paragraph"}],"runtimePreview":null,"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Можно переписать init с инициализатором State.","type":"text"}]}]},{"code":"StateOrBinding-01-04.swift","type":"step","media":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Для отслеживания изменений свойств можно использовать модификатор "},{"code":"onChange","type":"codeVoice"},{"text":", достпуный из коробки.","type":"text"}],"type":"paragraph"}],"runtimePreview":null}],"anchor":"Применение-и-возможности-State","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"State используется для хранения данных внутри вью."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Каждое изменение State запускает перерисовку вью."}]}]}],"title":"Применение и возможности State"},{"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"Binding используется для передачи данных между View."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Аналогично State, Binding запускает перерисовку вью при изменении значения."}]}]}],"anchor":"Применение-и-возможности-Binding","stepsSection":[{"caption":[{"inlineContent":[{"text":"ProjectedValue у Binding остается Binding. Изменяется тип параметра для начального значения на ","type":"text"},{"type":"codeVoice","code":"Binding<String>"}],"type":"paragraph"}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Перепишем поле ввода с использованием Binding."}]}],"type":"step","media":null,"code":"StateOrBinding-02-01.swift","runtimePreview":null},{"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Binding позволяет нам установить константное значение, что очень полезно при тестировании."}]}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Обратимся к нашему полю ввода из другой View."}]}],"media":null,"runtimePreview":null,"code":"StateOrBinding-02-02.swift"},{"caption":[],"media":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"С Binding мы можем привязать значение к другому State или Binding."}],"type":"paragraph"}],"code":"StateOrBinding-02-03.swift","runtimePreview":null},{"type":"step","runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Или связать значение с "},{"code":"Published","type":"codeVoice"},{"text":" свойтсвом какого-нибудь сервиса, формирующего State для View.","type":"text"}]}],"media":null,"code":"StateOrBinding-02-04.swift"}],"title":"Применение и возможности Binding"}]},{"kind":"assessments","assessments":[{"type":"multiple-choice","title":[{"type":"paragraph","inlineContent":[{"text":"Дана View с полем ввода. Оформляем эту View как отдельный компонент.","type":"text"},{"type":"text","text":" "},{"text":"Какой тип свойства использовать для хранения значения поля?","type":"text"}]}],"choices":[{"isCorrect":true,"justification":[{"inlineContent":[{"type":"text","text":"Используя Binding, мы сможем передать значение в другую View"}],"type":"paragraph"}],"content":[{"inlineContent":[{"type":"text","text":"Binding"}],"type":"paragraph"}]},{"isCorrect":false,"justification":[{"inlineContent":[{"text":"Используя State, мы не сможем передать значение в другую View. То есть не сможем оформить его как отдельный компонент.","type":"text"}],"type":"paragraph"}],"content":[{"inlineContent":[{"type":"text","text":"State"}],"type":"paragraph"}]}],"content":[]},{"type":"multiple-choice","content":[],"choices":[{"isCorrect":false,"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Binding тут избыточен. Маловероятен случай, когда нам нужно передавать это значение в другую View или менять извне."}]}],"content":[{"inlineContent":[{"type":"text","text":"Binding"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"State"}]}],"isCorrect":true,"justification":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Анимация это ограниченное по времени событие. Идеальный пример внутреннего State без оговорок."}]}]}],"title":[{"type":"paragraph","inlineContent":[{"text":"Дана View с кастомной анимацией на кнопке. Какой тип свойства использовать для хранения состояния анимации?","type":"text"}]}]}],"anchor":"Check-Your-Understanding"},{"abstract":[{"text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры.","type":"text"},{"text":" ","type":"text"},{"text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д.","type":"text"}],"action":{"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/ViewState-+-ViewStateHolder","overridingTitle":"Get started","type":"reference","isActive":true,"overridingTitleInlineContent":[{"text":"Get started","type":"text"}]},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"ViewState, UniversalState и ViewStateHolder"}],"metadata":{"categoryPathComponent":"Table-of-contents","role":"project","category":"Оглавление","title":"State vs Binding"},"kind":"project","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding"},"hierarchy":{"modules":[{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/-----------------------View","projects":[{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Facade","sections":[{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade","kind":"task"}]},{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak","sections":[{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9"},{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9"},{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject","kind":"task"},{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#Check-Your-Understanding","kind":"assessment"}]},{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Signals","sections":[{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0"}]}]},{"projects":[{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding","sections":[{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State","kind":"task"},{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding","kind":"task"},{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding#Check-Your-Understanding","kind":"assessment"}]},{"sections":[{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState","kind":"task"},{"kind":"task","reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder"}],"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/ViewState-+-ViewStateHolder"}],"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/---------------------State"},{"projects":[{"sections":[{"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState","kind":"task"}],"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/NavigationState"}],"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/---------"}],"paths":[["doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents","doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/$volume","doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/---------------------State"]],"reference":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/example\/state-vs-binding"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://dev.surf.sui-core.Example/tutorials/Example/NavigationState":{"kind":"project","title":"Горизонтальный стек - push\/pop","estimatedTime":"10min","type":"topic","role":"project","abstract":[{"type":"text","text":"Начиная с iOS 16, в SwiftUI доступен "},{"type":"codeVoice","code":"NavigationStack"},{"text":", который позволяет управлять навигацией в приложении.","type":"text"}],"url":"\/tutorials\/example\/navigationstate","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/NavigationState"},"doc://dev.surf.sui-core.Example/tutorials/Table-of-contents/-----------------------View":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/-----------------------View","role":"article","url":"\/tutorials\/table-of-contents\/-----------------------view","title":"Связь между модулями и View"},"doc://dev.surf.sui-core.Example/tutorials/Example/Environment+Weak":{"title":"Применение Environment","url":"\/tutorials\/example\/environment+weak","role":"project","estimatedTime":"15min","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak","kind":"project","type":"topic","abstract":[{"text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment.","type":"text"}]},"StateOrBinding-01-01.swift":{"type":"file","content":["import SwiftUI","","struct TutorForm: View {","","    @State private var text: String = \"\"","","    var body: some View {","        VStack {","            TextField(text: $text,","                      label: {","                Text(\"Введите текст\")","            })","        }","    }","}"],"highlights":[],"syntax":"swift","identifier":"StateOrBinding-01-01.swift","fileType":"swift","fileName":"TutorForm.swift"},"StateOrBinding-01-03.swift":{"identifier":"StateOrBinding-01-03.swift","fileType":"swift","syntax":"swift","fileName":"TutorForm.swift","type":"file","highlights":[{"line":8}],"content":["import SwiftUI","","struct TutorForm: View {","","    @State private var text: String = \"\"","","    init(text: String) {","        self._text = State(initialValue: text)","    }","","    var body: some View {","        VStack {","            TextField(text: $text,","                      label: {","                Text(\"Введите текст\")","            })","        }","    }","}"]},"doc://dev.surf.sui-core.Example/tutorials/Table-of-contents":{"kind":"overview","title":"Обучающие материалы по VSURF","type":"topic","role":"overview","abstract":[],"url":"\/tutorials\/table-of-contents","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents"},"doc://dev.surf.sui-core.Example/tutorials/Example/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding":{"kind":"section","type":"section","abstract":[{"type":"text","text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это "},{"code":"@State","type":"codeVoice"},{"type":"text","text":" и "},{"code":"@Binding","type":"codeVoice"},{"type":"text","text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия."}],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding","role":"pseudoSymbol","url":"\/tutorials\/example\/state-vs-binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-Binding","title":"Применение и возможности Binding"},"StateOrBinding-02-03.swift":{"identifier":"StateOrBinding-02-03.swift","fileType":"swift","syntax":"swift","type":"file","fileName":"TestView.swift","highlights":[{"line":4},{"line":5},{"line":6},{"line":8}],"content":["import SwiftUI","","struct TestView: View {","","    @State private var text: String = \"\"","","    var body: some View {","        TutorForm(text: $text)","    }","}"]},"doc://dev.surf.sui-core.Example/tutorials/Table-of-contents/---------":{"kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/---------","role":"article","url":"\/tutorials\/table-of-contents\/---------","title":"Навигация"},"doc://dev.surf.sui-core.Example/tutorials/Example/Signals":{"type":"topic","role":"project","title":"Оповещение других модулей","url":"\/tutorials\/example\/signals","kind":"project","estimatedTime":"10min","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Signals","abstract":[{"type":"text","text":"Сущность "},{"code":"Signal","type":"codeVoice"},{"text":" это протокол, используемый для оповещения модулей верхнего уровня о ","type":"text"},{"type":"strong","inlineContent":[{"text":"событиях","type":"text"}]},{"text":", происходящих в других модулях.","type":"text"}]},"StateOrBinding-02-01.swift":{"syntax":"swift","fileName":"TutorForm.swift","fileType":"swift","highlights":[],"identifier":"StateOrBinding-02-01.swift","content":["import SwiftUI","","struct TutorForm: View {","","    @Binding private var text: String","","    init(text: Binding<String>) {","        self._text = text","    }","","    var body: some View {","        VStack {","            TextField(text: $text,","                      label: {","                Text(\"Введите текст\")","            })","        }","    }","}"],"type":"file"},"doc://dev.surf.sui-core.Example/tutorials/Example/State-vs-Binding#Check-Your-Understanding":{"titleInlineContent":[{"type":"text","text":"Check Your Understanding"}],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding#Check-Your-Understanding","url":"\/tutorials\/example\/state-vs-binding#Check-Your-Understanding","type":"link","title":"Check Your Understanding"},"StateOrBinding-02-02.swift":{"fileName":"TestView.swift","type":"file","identifier":"StateOrBinding-02-02.swift","highlights":[],"content":["import SwiftUI","","struct TestView: View {","    var body: some View {","        TutorForm(text: .constant(\"Не редактируемое значение\"))","    }","}"],"fileType":"swift","syntax":"swift"},"doc://dev.surf.sui-core.Example/tutorials/Example/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState":{"abstract":[{"type":"text","text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры."},{"text":" ","type":"text"},{"type":"text","text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д."}],"url":"\/tutorials\/example\/viewstate-+-viewstateholder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D1%80%D0%B3%D0%B0%D0%BD%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-ViewState","title":"Примеры организации ViewState","kind":"section","role":"pseudoSymbol","type":"section"},"doc://dev.surf.sui-core.Example/tutorials/Example/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment."}],"kind":"section","title":"Передача стилей","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9","type":"section","url":"\/tutorials\/example\/environment+weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D1%81%D1%82%D0%B8%D0%BB%D0%B5%D0%B9"},"StateOrBinding-01-04.swift":{"content":["import SwiftUI","","struct TutorForm: View {","","    @State private var text: String = \"\"","","    init(text: String) {","        self._text = State(initialValue: text)","    }","","    var body: some View {","        VStack {","            TextField(text: $text,","                      label: {","                Text(\"Введите текст\")","            })","        }.onChanged(of: text) { newValue in","            debugPrint(\"Text changed to \\(newValue)\")","        }","    }","}"],"identifier":"StateOrBinding-01-04.swift","fileName":"TutorForm.swift","fileType":"swift","highlights":[{"line":17},{"line":18}],"type":"file","syntax":"swift"},"doc://dev.surf.sui-core.Example/tutorials/Example/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState":{"url":"\/tutorials\/example\/navigationstate#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState","abstract":[{"type":"text","text":"Начиная с iOS 16, в SwiftUI доступен "},{"code":"NavigationStack","type":"codeVoice"},{"text":", который позволяет управлять навигацией в приложении.","type":"text"}],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/NavigationState#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-NavigationState","role":"pseudoSymbol","title":"Пример использования NavigationState","type":"section","kind":"section"},"StateOrBinding-02-04.swift":{"fileName":"TestView.swift","fileType":"swift","highlights":[{"line":5},{"line":8},{"line":11},{"line":12},{"line":13},{"line":14}],"syntax":"swift","content":["import SwiftUI","","struct TestView: View {","","    @StateObject private var textHolder: TestViewStateHolder = \"\"","","    var body: some View {","        TutorForm(text: $textHolder.text)","    }","}","","final class TextHolder: ObservableObject {","    @Published var text: String = \"\"","}"],"type":"file","identifier":"StateOrBinding-02-04.swift"},"doc://dev.surf.sui-core.Example/tutorials/Example/State-vs-Binding":{"title":"State vs Binding","url":"\/tutorials\/example\/state-vs-binding","role":"project","estimatedTime":"10min","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding","kind":"project","type":"topic","abstract":[{"text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это ","type":"text"},{"type":"codeVoice","code":"@State"},{"type":"text","text":" и "},{"type":"codeVoice","code":"@Binding"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}]},"doc://dev.surf.sui-core.Example/tutorials/Example/Facade":{"title":"Facade как лицо модуля","url":"\/tutorials\/example\/facade","role":"project","estimatedTime":"5min","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Facade","kind":"project","type":"topic","abstract":[{"type":"text","text":"Иными словами это Input и Output модуля."}]},"doc://dev.surf.sui-core.Example/tutorials/Example/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder":{"url":"\/tutorials\/example\/viewstate-+-viewstateholder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder","abstract":[{"text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры.","type":"text"},{"text":" ","type":"text"},{"text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д.","type":"text"}],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/ViewState-+-ViewStateHolder#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D1%8B-%D0%BE%D0%B1%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-View-%D0%B8-State-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-ViewStateHolder","role":"pseudoSymbol","title":"Примеры обмена данными между View и State через ViewStateHolder","type":"section","kind":"section"},"doc://dev.surf.sui-core.Example/tutorials/Example/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject":{"kind":"section","title":"Weak - Наша альтернатива EnvironmentObject","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject","url":"\/tutorials\/example\/environment+weak#Weak-%D0%9D%D0%B0%D1%88%D0%B0-%D0%B0%D0%BB%D1%8C%D1%82%D0%B5%D1%80%D0%BD%D0%B0%D1%82%D0%B8%D0%B2%D0%B0-EnvironmentObject","role":"pseudoSymbol","abstract":[{"text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment.","type":"text"}],"type":"section"},"doc://dev.surf.sui-core.Example/tutorials/Example/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0":{"url":"\/tutorials\/example\/signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0","abstract":[{"text":"Сущность ","type":"text"},{"code":"Signal","type":"codeVoice"},{"text":" это протокол, используемый для оповещения модулей верхнего уровня о ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"событиях"}]},{"text":", происходящих в других модулях.","type":"text"}],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Signals#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%B8-%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D1%81%D0%B8%D0%B3%D0%BD%D0%B0%D0%BB%D0%B0","role":"pseudoSymbol","title":"Пример отправки и обработки сигнала","type":"section","kind":"section"},"StateOrBinding-01-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct TutorForm: View {","","    @State private var text: String = \"\"","","    init(text: String) {","        self.text = text","    }","","    var body: some View {","        VStack {","            TextField(text: $text,","                      label: {","                Text(\"Введите текст\")","            })","        }","    }","}"],"identifier":"StateOrBinding-01-02.swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10}],"fileName":"TutorForm.swift","type":"file","fileType":"swift"},"doc://dev.surf.sui-core.Example/tutorials/Example/Environment+Weak#Check-Your-Understanding":{"title":"Check Your Understanding","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#Check-Your-Understanding","type":"link","titleInlineContent":[{"type":"text","text":"Check Your Understanding"}],"url":"\/tutorials\/example\/environment+weak#Check-Your-Understanding"},"doc://dev.surf.sui-core.Example/tutorials/Example/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9":{"kind":"section","title":"Передача значений","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Environment+Weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9","url":"\/tutorials\/example\/environment+weak#%D0%9F%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B0-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9","role":"pseudoSymbol","abstract":[{"type":"text","text":"Environment занимает не последнее место в SwiftUI. Он позволяет передавать значения вниз по иерархии представлений, не заботясь о том, как это сделать. В этом уроке мы рассмотрим варианты использования Environment."}],"type":"section"},"doc://dev.surf.sui-core.Example/tutorials/Table-of-contents/---------------------State":{"url":"\/tutorials\/table-of-contents\/---------------------state","abstract":[],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Table-of-contents\/---------------------State","role":"article","title":"Внутренний и внешний State","type":"topic","kind":"article"},"doc://dev.surf.sui-core.Example/tutorials/Example/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade":{"kind":"section","title":"Пример формирования Facade","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/Facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade","url":"\/tutorials\/example\/facade#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D1%80-%D1%84%D0%BE%D1%80%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-Facade","role":"pseudoSymbol","abstract":[{"type":"text","text":"Иными словами это Input и Output модуля."}],"type":"section"},"doc://dev.surf.sui-core.Example/tutorials/Example/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State":{"url":"\/tutorials\/example\/state-vs-binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State","abstract":[{"type":"text","text":"В SwiftUI есть два способа передачи данных между вью и моделью. Это "},{"code":"@State","type":"codeVoice"},{"type":"text","text":" и "},{"code":"@Binding","type":"codeVoice"},{"text":". Оба этих свойства позволяют изменять значения внутри вью, но есть некоторые отличия.","type":"text"}],"identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/State-vs-Binding#%D0%9F%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B8-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE%D1%81%D1%82%D0%B8-State","role":"pseudoSymbol","title":"Применение и возможности State","type":"section","kind":"section"},"doc://dev.surf.sui-core.Example/tutorials/Example/ViewState-+-ViewStateHolder":{"kind":"project","title":"ViewState, UniversalState и ViewStateHolder","estimatedTime":"20min","type":"topic","role":"project","abstract":[{"text":"До SwiftUI вопрос наполнения View данными регламентировался по-разному, в зависимости от выбранной архитектуры.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"В MVVM за это отвечает ViewModel, в MVP - Presenter и т.д."}],"url":"\/tutorials\/example\/viewstate-+-viewstateholder","identifier":"doc:\/\/dev.surf.sui-core.Example\/tutorials\/Example\/ViewState-+-ViewStateHolder"}}}